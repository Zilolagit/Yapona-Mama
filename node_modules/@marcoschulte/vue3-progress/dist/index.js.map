{"version":3,"file":"index.js","sources":["../src/GlobalInstanceHolder.ts","../src/Injector.ts","../src/TrickleComposable.ts","../src/ProgressBar.vue","../src/ProgressBar.vue?vue&type=template&id=59e03786&lang.js","../src/ProgressPlugin.ts"],"sourcesContent":["import {ProgressControls} from './ProgressControls';\n\nexport const holder = {instance: null as null | ProgressControls};\n","import {inject, InjectionKey} from 'vue';\nimport {holder} from './GlobalInstanceHolder';\nimport {ProgressControls} from './ProgressControls';\n\nexport const injectionKey: InjectionKey<ProgressControls> = Symbol(\n  'Vue3Progress',\n);\n\nexport const useProgress = (): ProgressControls => {\n  return holder.instance || inject(injectionKey) as ProgressControls;\n};\n","import {onBeforeUnmount, ref, watch} from 'vue';\nimport {ProgressState} from './ProgressState';\n\nexport default function trickleComposable(state: ProgressState) {\n  const intervalHolder = {interval: null as any};\n  const value = ref(0);\n\n  const removeInterval = () => {\n    if (intervalHolder.interval) {\n      clearInterval(intervalHolder.interval);\n      intervalHolder.interval = null;\n    }\n  };\n\n  const increaseValue = () => {\n    value.value = Math.min(value.value + trickleAmount(value.value), 100);\n  };\n\n  const stateChanged = () => {\n    removeInterval();\n\n    if (state.active) {\n      value.value = 0;\n      intervalHolder.interval = setInterval(() => increaseValue(), 300);\n\n    } else {\n      value.value = 100;\n      intervalHolder.interval = setInterval(() => value.value = 0, 500);\n    }\n  };\n\n  watch(() => state.active, () => {\n    stateChanged();\n  });\n\n  onBeforeUnmount(() => removeInterval());\n\n  if (state.active) {\n    stateChanged();\n  }\n\n  return {\n    value,\n  };\n}\n\nfunction trickleAmount(n: number): number {\n  if (n < 20) {\n    return 10;\n  } else if (n < 50) {\n    return 4;\n  } else if (n < 80) {\n    return 2;\n  } else if (n < 99) {\n    return 0.5;\n  }\n  return 0;\n}\n","<template>\n  <div class=\"vue3-progress-bar-container\" v-bind:active=\"state.active\">\n    <div class=\"vue3-progress-bar\" :style=\"style\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from 'vue';\nimport {useProgress} from './Injector';\nimport trickleComposable from './TrickleComposable';\n\nexport default defineComponent({\n  name: 'Vue3ProgressBar',\n\n  setup: () => {\n    const state = useProgress().state();\n    const {value} = trickleComposable(state);\n    return {state, value};\n  },\n\n  computed: {\n    style() {\n      return {\n        transform: `translate3d(${this.value - 100}%,0,0)`,\n      };\n    },\n  },\n\n});\n</script>\n\n<style lang=\"scss\">\n$vue3-progress-bar-container-z-index: 999999 !default;\n$vue3-progress-bar-container-transition: all 500ms ease !default;\n\n$vue3-progress-bar-color: #42b983 !default;\n$vue3-progress-bar-height: 2px !default;\n$vue3-progress-bar-transition: all 200ms ease !default;\n\n.vue3-progress-bar-container {\n  position: fixed;\n  z-index: $vue3-progress-bar-container-z-index;\n  top: 0;\n  left: 0;\n  width: 100%;\n  opacity: 0;\n  transition: $vue3-progress-bar-container-transition;\n\n  &[active=\"true\"] {\n    opacity: 1;\n    transition: none;\n  }\n\n  .vue3-progress-bar {\n    width: 100%;\n    height: $vue3-progress-bar-height;\n    transform: translate3d(-100%, 0, 0);\n    background-color: $vue3-progress-bar-color;\n    transition: $vue3-progress-bar-transition;\n  }\n}\n\n</style>\n","<template>\n  <div class=\"vue3-progress-bar-container\" v-bind:active=\"state.active\">\n    <div class=\"vue3-progress-bar\" :style=\"style\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from 'vue';\nimport {useProgress} from './Injector';\nimport trickleComposable from './TrickleComposable';\n\nexport default defineComponent({\n  name: 'Vue3ProgressBar',\n\n  setup: () => {\n    const state = useProgress().state();\n    const {value} = trickleComposable(state);\n    return {state, value};\n  },\n\n  computed: {\n    style() {\n      return {\n        transform: `translate3d(${this.value - 100}%,0,0)`,\n      };\n    },\n  },\n\n});\n</script>\n\n<style lang=\"scss\">\n$vue3-progress-bar-container-z-index: 999999 !default;\n$vue3-progress-bar-container-transition: all 500ms ease !default;\n\n$vue3-progress-bar-color: #42b983 !default;\n$vue3-progress-bar-height: 2px !default;\n$vue3-progress-bar-transition: all 200ms ease !default;\n\n.vue3-progress-bar-container {\n  position: fixed;\n  z-index: $vue3-progress-bar-container-z-index;\n  top: 0;\n  left: 0;\n  width: 100%;\n  opacity: 0;\n  transition: $vue3-progress-bar-container-transition;\n\n  &[active=\"true\"] {\n    opacity: 1;\n    transition: none;\n  }\n\n  .vue3-progress-bar {\n    width: 100%;\n    height: $vue3-progress-bar-height;\n    transform: translate3d(-100%, 0, 0);\n    background-color: $vue3-progress-bar-color;\n    transition: $vue3-progress-bar-transition;\n  }\n}\n\n</style>\n","import {App, Plugin, reactive} from 'vue';\nimport {holder} from './GlobalInstanceHolder';\nimport {injectionKey} from './Injector';\nimport ProgressBar from './ProgressBar.vue';\nimport {ProgressControls, ProgressFinisher} from './ProgressControls';\nimport {ProgressState} from './ProgressState';\n\n\nexport interface ProgressOptions {\n  disableGlobalInstance: boolean;\n}\n\nconst state = reactive({\n  active: false,\n} as ProgressState);\n\nconst createPlugin = (): ProgressControls => {\n  const internalState = {inflight: 0};\n  const updateActive = () => {\n    state.active = internalState.inflight > 0;\n  };\n\n  const createFinisher = (finishState: { used: boolean }) => {\n    return {\n      finish: () => {\n        if (!finishState.used) {\n          finishState.used = true;\n          internalState.inflight--;\n          updateActive();\n        }\n      },\n    };\n  };\n\n  return {\n    start(): ProgressFinisher {\n      internalState.inflight++;\n      updateActive();\n\n      return createFinisher({used: false});\n    },\n\n    attach(promise) {\n      const finisher = this.start();\n      promise.then(() => finisher.finish(), () => finisher.finish());\n      return promise;\n    },\n\n    state(): ProgressState {\n      return state;\n    },\n  };\n};\n\nexport const Vue3ProgressPlugin: Plugin = {\n  install: (app: App, options?: ProgressOptions) => {\n    const instance = createPlugin();\n\n    app.provide(injectionKey, instance);\n    app.config.globalProperties.$progress = instance;\n    if (!options || !options.disableGlobalInstance) {\n      holder.instance = instance;\n    }\n    app.component('Vue3ProgressBar', ProgressBar);\n  },\n};\n\ndeclare module '@vue/runtime-core' {\n  export interface ComponentCustomProperties {\n    $progress: ProgressControls;\n  }\n}\n"],"names":["inject","ref","watch","onBeforeUnmount","defineComponent","_createElementBlock","_createElementVNode","reactive","ProgressBar"],"mappings":"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"}